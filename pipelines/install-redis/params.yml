product_slug: p-redis
product-name: p-redis
p_redis_version: ^1\.12\..*$

singleton_jobs_az: CHANGEME # [R] Place singleton jobs in an AZ
other_azs: CHANGEME # [R] Balance other jobs in AZ's
network_name: CHANGEME # [R] Tile network name
service_network_name: CHANGEME

opsman_client_id:
opsman_client_secret:
opsman_domain_or_ip_address: CHANGEME
# Operations Manager credentials to set
# opsman_admin_username/opsman_admin_password needs to be specified
opsman_admin_username: CHANGEME
opsman_admin_password: CHANGEME
# Pivnet token for downloading resources from Pivnet. Find this token at https://network.pivotal.io/users/dashboard/edit-profile
pivnet_token: CHANGEME
git_private_key: |
  CHANGEME
  

product-properties: |
  ---
  ".properties.syslog_selector":                                                        # "Yes without encryption"|"No"|"Yes with TLS encryption"
    value: Yes without encryption
  ".properties.syslog_selector.active.syslog_address":
    value:
  ".properties.syslog_selector.active.syslog_port":
    value:
  ".properties.syslog_selector.active.syslog_transport":                                # tcp|udp|relp
    value: tcp
  ".properties.syslog_selector.active.syslog_format":
    value: rfc5424
  ".properties.syslog_selector.active_with_tls.syslog_address":
    value:
  ".properties.syslog_selector.active_with_tls.syslog_port":
    value:
  ".properties.syslog_selector.active_with_tls.syslog_format":
    value: rfc5424
  ".properties.syslog_selector.active_with_tls.syslog_permitted_peer":
    value:
  ".properties.syslog_selector.active_with_tls.syslog_ca_cert":
    value:
  ".properties.metrics_polling_interval":
    value: 30
  ".properties.small_plan_selector":                                                      # "Plan Active" | "Plan Inactive"
    value: Plan Active
  ".properties.small_plan_selector.active.name":
    value: cache-small
  ".properties.small_plan_selector.active.description":
    value: This plan provides a small dedicated Redis instance, tailored for caching
      use-cases with persistence to disk enabled
  ".properties.small_plan_selector.active.cf_service_access":                             # enable|disable|manual
    value: enable
  ".properties.small_plan_selector.active.az_single_select":
    value:
  ".properties.small_plan_selector.active.vm_type":
    value:
  ".properties.small_plan_selector.active.disk_size":
    value:
  ".properties.small_plan_selector.active.timeout":
    value: 3600
  ".properties.small_plan_selector.active.tcp_keepalive":
    value: 60
  ".properties.small_plan_selector.active.maxclients":
    value: 1000
  ".properties.small_plan_selector.active.lua_scripting":
    value: false
  ".properties.small_plan_selector.active.instance_limit":
    value: 20
  ".properties.medium_plan_selector":
    value: Plan Active
  ".properties.medium_plan_selector.active.name":
    value: cache-medium
  ".properties.medium_plan_selector.active.description":
    value: This plan provides a medium dedicated Redis instance, tailored for caching
      use-cases with persistence to disk enabled
  ".properties.medium_plan_selector.active.cf_service_access":
    value: enable
  ".properties.medium_plan_selector.active.az_single_select":
    value:
  ".properties.medium_plan_selector.active.vm_type":
    value:
  ".properties.medium_plan_selector.active.disk_size":
    value:
  ".properties.medium_plan_selector.active.timeout":
    value: 3600
  ".properties.medium_plan_selector.active.tcp_keepalive":
    value: 60
  ".properties.medium_plan_selector.active.maxclients":
    value: 5000
  ".properties.medium_plan_selector.active.lua_scripting":
    value: false
  ".properties.medium_plan_selector.active.instance_limit":
    value: 20
  ".properties.large_plan_selector":
    value: Plan Active
  ".properties.large_plan_selector.active.name":
    value: cache-large
  ".properties.large_plan_selector.active.description":
    value: This plan provides a large dedicated Redis instance, tailored for caching
      use-cases with persistence to disk enabled
  ".properties.large_plan_selector.active.cf_service_access":
    value: enable
  ".properties.large_plan_selector.active.az_single_select":
    value:
  ".properties.large_plan_selector.active.vm_type":
    value:
  ".properties.large_plan_selector.active.disk_size":
    value:
  ".properties.large_plan_selector.active.timeout":
    value: 3600
  ".properties.large_plan_selector.active.tcp_keepalive":
    value: 60
  ".properties.large_plan_selector.active.maxclients":
    value: 10000
  ".properties.large_plan_selector.active.lua_scripting":
    value: false
  ".properties.large_plan_selector.active.instance_limit":
    value: 20
  ".properties.backups_selector":
    value: No Backups
  ".properties.backups_selector.s3.access_key_id":
    value:
  ".properties.backups_selector.s3.secret_access_key":
    value:
  ".properties.backups_selector.s3.endpoint_url":
    value:
  ".properties.backups_selector.s3.region":
    value:
  ".properties.backups_selector.s3.signature_version":
    value: '4'
  ".properties.backups_selector.s3.bucket_name":
    value:
  ".properties.backups_selector.s3.path":
    value:
  ".properties.backups_selector.s3.cron_schedule":
    value: 0 0 * * *
  ".properties.backups_selector.s3.bg_save_timeout":
    value: 10
  ".properties.backups_selector.scp.server":
    value:
  ".properties.backups_selector.scp.user":
    value:
  ".properties.backups_selector.scp.key":
    value:
  ".properties.backups_selector.scp.path":
    value:
  ".properties.backups_selector.scp.port":
    value: 22
  ".properties.backups_selector.scp.cron_schedule":
    value: 0 0 * * *
  ".properties.backups_selector.scp.bg_save_timeout":
    value: 10
  ".properties.backups_selector.scp.fingerprint":
    value:
  ".properties.backups_selector.azure.account":
    value:
  ".properties.backups_selector.azure.storage_access_key":
    value:
  ".properties.backups_selector.azure.path":
    value:
  ".properties.backups_selector.azure.cron_schedule":
    value: 0 0 * * *
  ".properties.backups_selector.azure.bg_save_timeout":
    value: 10
  ".properties.backups_selector.azure.container":
    value:
  ".properties.backups_selector.azure.blob_store_base_url":
    value:
  ".properties.backups_selector.gcs.project_id":
    value:
  ".properties.backups_selector.gcs.bucket_name":
    value:
  ".properties.backups_selector.gcs.service_account_json":
    value:
  ".properties.backups_selector.gcs.cron_schedule":
    value: 0 0 * * *
  ".properties.backups_selector.gcs.bg_save_timeout":
    value: 10
  ".redis-on-demand-broker.service_instance_limit":
    value: 20
  ".redis-on-demand-broker.vm_extensions":                                            # public_ip|""
    value:
  ".redis-on-demand-broker.service_instance_sharing":
    value: false
  ".cf-redis-broker.service_instance_limit":
    value: 5
  ".cf-redis-broker.redis_maxmemory":
    value: 512MB
network-properties: |
  network:
    name:
  service_network:
    name:
  other_availability_zones:
    - name:
    - name:
  singleton_availability_zone:
    name:
resource-config: |
  redis-on-demand-broker:
    instances: 1
    instance_type:
      id: medium
    persistent_disk:
      size_mb: "10240"
  cf-redis-broker:
    instances: 1
    instance_type:
      id: medium
    persistent_disk:
      size_mb: "10240"
  dedicated-node:
    instances: 5
    instance_type:
      id: micro.ram
    persistent_disk:
      size_mb: "5120"
errands_to_disable: # "broker-registrar,smoke-tests,register-on-demand-broker,on-demand-broker-smoke-tests,upgrade-all-service-instances,broker-deregistrar,delete-all-service-instances-and-deregister-broker"

apply_changes_config:
